<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtMapper">

	<sql id="item_base">
			item_id as itemId,
			item_nm as itemNm,
			item_type as itemType,
			item_price as itemPrice,
			item_mtrl_cost as itemMtrlCost,
			item_person_cost as itemPersonCost,
			item_std01 as itemStd01,
			item_std02 as itemStd02,
			item_std03 as itemStd03,
			item_std04 as itemStd04,
			item_std05 as itemStd05,
			item_std_str01 as itemStdStr01,
			item_std_str02 as itemStdStr02,
			item_std_str03 as itemStdStr03,
			item_std_str04 as itemStdStr04,
			item_std_str05 as itemStdStr05,
			item_unit as itemUnit,
			item_mtrl as itemMtrl,
			item_total_stock as itemTotalStock,
			item_day_target as itemDayTarget,
			description,
			is_use as isUse,
			created_at as createdAt,
			creator_id as creatorId,
			updated_at as updatedAt,
			updator_id as updatorId,
			item_deduction as itemDeduction
		FROM bc_item_info
		WHERE 1=1
			<if test="itemId != null and itemId !='' ">
				AND item_id = #{itemId}
			</if>
			<if test="itemType != null and itemType != '' ">
				AND item_type = #{itemType}
			</if>
			<if test="isUse != null and isUse != '' ">
				AND is_use = #{isUse}
			</if>
			<choose>
				<when test="searchGubun == 'itemId'">
					AND item_id LIKE CONCAT('%',#{searchText},'%')
				</when>
				<when test="searchGubun == 'itemNm'">
					AND item_nm LIKE CONCAT('%',#{searchText},'%')
				</when>
			</choose>
	</sql>
 	<select id="selectItemList"
		parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto"
		resultType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		SELECT *
		FROM (
			SELECT
			<choose>
				<when test="sort != null and sort != '' ">
					ROW_NUMBER() OVER(ORDER BY ${sort}) AS RNUM,
				</when>
				<otherwise>
					ROW_NUMBER() OVER(ORDER BY updatedAt DESC) AS RNUM,
				</otherwise>
			</choose> 
				<include refid="item_base"/>
			)s_table
			<if test="firstIndex != null and firstIndex != 0 and lastIndex != null and lastIndex != 0 ">
				WHERE RNUM <![CDATA[ <= ]]> #{lastIndex} AND RNUM <![CDATA[ >= ]]> #{firstIndex}
			</if>
	</select>
 	
	<select id="rowCount"
		parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto"
		resultType="int">
		SELECT COUNT(*)
		FROM(
			SELECT
			<include refid="item_base"/>
		)c_table
	</select>
	
	<select id="selectRtlCompList"
		parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto"
		resultType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		SELECT * 
		FROM bc_rtl_item_comp a
		LEFT JOIN bc_company_info b
		ON a.comp_id = b.comp_id
		WHERE item_id = #{itemId}
	</select>
	
	<select id="selectRtlCompCount"
		parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto"
		resultType="int">
		SELECT COUNT(*) 
		FROM bc_rtl_item_comp a
		LEFT JOIN bc_company_info b
		ON a.comp_id = b.comp_id
		WHERE item_id = #{itemId}
	</select>
	
	<insert id="insertItem" parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		<selectKey keyProperty="itemId" resultType="String" order="BEFORE">
			SELECT CREATE_PK('ITEM') as itemId
		</selectKey>
		INSERT INTO bc_item_info
		(
			item_id,
			item_nm,
			item_price,
			item_mtrl_cost,
			item_person_cost,
			item_type,
			item_std01,
			item_std02,
			item_std03,
			item_std04,
			item_std05,
			item_std_str01,
			item_std_str02,
			item_std_str03,
			item_std_str04,
			item_std_str05,
			item_unit,
			item_mtrl,
			item_total_stock,
			item_day_target,
			description,
			is_use,
			created_at,
			creator_id,
			updated_at,
			updator_id,
			item_deduction
		)
		VALUES
		(
			#{itemId},
			#{itemNm},
			#{itemPrice},
			#{itemMtrlCost},
			#{itemPersonCost},
			#{itemType},
			#{itemStd01},
			#{itemStd02},
			#{itemStd03},
			#{itemStd04},
			#{itemStd05},
			#{itemStdStr01},
			#{itemStdStr02},
			#{itemStdStr03},
			#{itemStdStr04},
			#{itemStdStr05},
			#{itemUnit},
			#{itemMtrl},
			#{itemTotalStock},
			#{itemDayTarget},
			#{description},
			TRUE,
			now(),
			#{creatorId},
			now(),
			#{updatorId},
			#{itemDeduction}
		)
	</insert>
	
	<update id="updateItem"
		parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		UPDATE bc_item_info
		SET
			item_nm = #{itemNm},
			item_price = #{itemPrice},
			item_mtrl_cost = #{itemMtrlCost},
			item_person_cost = #{itemPersonCost},
			item_type = #{itemType},
			item_std01 = #{itemStd01},
			item_std02 = #{itemStd02},
			item_std03 = #{itemStd03},
			item_std04 = #{itemStd04},
			item_std05 = #{itemStd05},
			item_std_str01 = #{itemStdStr01},
			item_std_str02 = #{itemStdStr02},
			item_std_str03 = #{itemStdStr03},
			item_std_str04 = #{itemStdStr04},
			item_std_str05 = #{itemStdStr05},
			item_unit = #{itemUnit},
			item_mtrl = #{itemMtrl},
			item_total_stock = #{itemTotalStock},
			item_day_target = #{itemDayTarget},
			description = #{description},
			updated_at = now(),
			updator_id = #{updatorId},
			item_deduction = #{itemDeduction}
			<if test="itemTotalStock != null">
				,item_total_stock = #{itemTotalStock}
			</if>
			<if test="itemDayTarget != null">
				,item_day_target = #{itemDayTarget}
			</if>
			<if test="itemStd05 != null">
				,item_std05 = #{itemStd05}
			</if>
		WHERE item_id = #{itemId}
	</update>
	
	<update id="updateItemDeduction"
		parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		UPDATE bc_item_info
		SET
			item_deduction = #{itemDeduction}
		WHERE item_id = #{itemId}
	</update>
	
	<insert id="insertRtlComp" parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		INSERT INTO bc_rtl_item_comp
		(
			item_id,
			comp_id
		)
		VALUES
		(
			#{itemId},
			#{compId}
		)
	</insert>
	
	<delete id="deleteRtlComp" parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		DELETE FROM bc_rtl_item_comp
		WHERE 1=1
		AND item_id = #{itemId}
		AND comp_id = #{compId} 
	</delete>
	
	<update id="updateIsUse"
		parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		UPDATE bc_item_info
		SET is_use = #{isUse}
		WHERE item_id = #{itemId}
	</update>
	
	<insert id="insertKpi" parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		INSERT INTO rpt_kpi_info
		(
			item_id,
			kpi_target,
			kpi_date,
			kpi_value
		)
		VALUES
		(
			#{itemId},
			#{kpiTarget},
			#{kpiDate},
			#{kpiValue}
		)
	</insert>
	
	<select id="selectKpi"
	parameterType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto"
	resultType="jin.mes.cform.basMgt.operMgt.itemMgt.NewItemMgtDto">
		SELECT
			leadTimeT.lotId,
			leadTimeT.leadTime,
			ifnull(badProductT.badItemRate, 0) as badItemRate,
			stockT.stockTime,
			shipT.shipmentTime,
			date_format(shipT.createdAt,'%Y-%m-%d') as createdAt
		FROM (
			-- 제조리드타임
			SELECT 
				workInfo.lot_id as lotId, 
				TIMESTAMPDIFF(WEEK, MIN(prod_work_start), MAX(prod_work_end)) as leadTime
			FROM prs_work_info workInfo
			INNER JOIN prs_lot_info lotInfo ON workInfo.lot_id = lotInfo.lot_id
			WHERE lotInfo.item_id = "ITEM202008260001"
			GROUP BY workInfo.lot_id
		) leadTimeT
		LEFT join (
			-- 불량율
			SELECT 
				badProduct.lot_id AS lotId, 
				sum(bad_qty) as badQty,
				(sum(bad_qty)/(itemAchieveT.itemQtyTotal + sum(bad_qty))) * 100 as badItemRate
			FROM prs_bad_product badProduct
			INNER JOIN prs_lot_info lotInfo ON badProduct.lot_id = lotInfo.lot_id
			INNER JOIN (
				SELECT item_mgt_id as itemMgtId, SUM(item_qty_total) as itemQtyTotal
				FROM qm_item_mgt
				WHERE item_qty_target != 'prod_tagt02' AND item_qty_target != 'ADMIN'
				AND item_id = 'ITEM202008260001'
				GROUP BY item_mgt_id
			) itemAchieveT on badProduct.lot_id = itemAchieveT.itemMgtId
			where item_id = 'ITEM202008260001'
			GROUP BY badProduct.lot_id
		) badProductT ON leadTimeT.lotId = badProductT.lotId
		LEFT JOIN (
			-- 재공재고 감소
			select productAssign.lot_id as lotId, 
			TIMESTAMPDIFF(DAY, min(prod_asm_date), IFNULL(lotInfo.complete_date, min(prod_asm_date))) as stockTime from prs_product_assignment productAssign
			inner join prs_lot_info lotInfo on productAssign.lot_id = lotInfo.lot_id
			WHERE lotInfo.item_id = 'ITEM202008260001'
			group by productAssign.lot_id
		) stockT on leadTimeT.lotId = stockT.lotId
		LEFT JOIN (
			-- 납기단축
			SELECT lotInfo.lot_id AS lotId, 
			lotInfo.created_at as createdAt,
			TIMESTAMPDIFF(WEEK, lotInfo.created_at, IFNULL(lotInfo.complete_date, lotInfo.created_at)) shipmentTime
			FROM prs_lot_info lotInfo
			WHERE lotInfo.item_id = 'ITEM202008260001'
		) shipT on leadTimeT.lotId = shipT.lotId
		order by shipT.createdAt
	</select>
	
</mapper>