/**
 * EasyUI for Angular 1.2.5
 * 
 * Copyright (c) 2009-2019 www.jeasyui.com. All rights reserved.
 *
 * Licensed under the freeware license: https://www.jeasyui.com/license_freeware2.php
 * To use it on other terms please contact us: info@jeasyui.com
 *
 */
var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{Component,forwardRef,Inject,Input}from"@angular/core";import{TreeGridBodyComponent}from"./treegrid-body.component";var TreeGridChildrenComponent=function(){function TreeGridChildrenComponent(gridBody){this.gridBody=gridBody,this.rows=[],this.depth=0,this.grid=this.gridBody.view.grid}return TreeGridChildrenComponent.prototype.onRowClick=function(row,event){event.stopPropagation(),this.grid.rowClick.emit(row),"single"==this.grid.selectionMode?this.grid.selectRow(row):"multiple"==this.grid.selectionMode&&(this.grid.isSelected(row)?this.grid.unselectRow(row):this.grid.selectRow(row))},TreeGridChildrenComponent.prototype.onRowDblClick=function(row,event){this.grid.rowDblClick.emit(row)},TreeGridChildrenComponent.prototype.onRowContextMenu=function(row,event){this.grid.rowContextMenu.emit({row:row,originalEvent:event})},__decorate([Input(),__metadata("design:type",Array)],TreeGridChildrenComponent.prototype,"rows",void 0),__decorate([Input(),__metadata("design:type",Object)],TreeGridChildrenComponent.prototype,"prow",void 0),__decorate([Input(),__metadata("design:type",Object)],TreeGridChildrenComponent.prototype,"columns",void 0),__decorate([Input(),__metadata("design:type",Number)],TreeGridChildrenComponent.prototype,"depth",void 0),TreeGridChildrenComponent=__decorate([Component({selector:"[euiTreeGridChildren]",template:'\n\t\t<table class="datagrid-btable" border="0" cellspacing="0" cellpadding="0">\n\t\t\t<colgroup>\n\t\t\t\t<col *ngFor="let col of columns" [style.width]="col.width">\n\t\t\t</colgroup>\n\t\t\t<tbody>\n\t\t\t\t<ng-container *ngFor="let row of rows;let index=index">\n\t\t\t\t<tr #rowRef euiTreeGridRow [row]="row" [prow]="prow" [columns]="columns" [depth]="depth"\n\t\t\t\t\t\tclass="datagrid-row"\n\t\t\t\t\t\t[class.datagrid-row-over]="grid.isHighlighted(row)"\n\t\t\t\t\t\t[class.datagrid-row-selected]="grid.isSelected(row)"\n\t\t\t\t\t\t(mouseenter)="grid.highlightRow=row"\n\t\t\t\t\t\t(mouseleave)="grid.highlightRow=null"\n\t\t\t\t\t\t(click)="onRowClick(row,$event)"\n\t\t\t\t\t\t(dblclick)="onRowDblClick(row,$event)"\n\t\t\t\t\t\t(contextmenu)="onRowContextMenu(row,$event)">\n\t\t\t\t</tr>\n\t\t\t\t<tr *ngIf="rowRef.isExpanded() && row.children && row.children.length" class="treegrid-tr-tree">\n\t\t\t\t\t<td [attr.colspan]="columns.length" style="border:0">\n\t\t\t\t\t\t<div euiTreeGridChildren [rows]="row.children" [prow]="row" [columns]="columns" [depth]="depth+1">\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</ng-container>\n\t\t\t</tbody>\n\t\t</table>\n\t'}),__param(0,Inject(forwardRef(function(){return TreeGridBodyComponent}))),__metadata("design:paramtypes",[TreeGridBodyComponent])],TreeGridChildrenComponent)}();export{TreeGridChildrenComponent};