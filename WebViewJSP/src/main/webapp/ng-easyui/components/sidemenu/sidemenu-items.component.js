/**
 * EasyUI for Angular 1.2.5
 * 
 * Copyright (c) 2009-2019 www.jeasyui.com. All rights reserved.
 *
 * Licensed under the freeware license: https://www.jeasyui.com/license_freeware2.php
 * To use it on other terms please contact us: info@jeasyui.com
 *
 */
var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{Component,Input,Host,Inject,forwardRef,ViewChild}from"@angular/core";import{SideMenuComponent}from"./sidemenu.component";import{AccordionComponent}from"../accordion/accordion.component";var SideMenuItemsComponent=function(){function SideMenuItemsComponent(sidemenu){this.sidemenu=sidemenu,this.tip=!1,this._data=null}return Object.defineProperty(SideMenuItemsComponent.prototype,"data",{get:function(){return this._data},set:function(value){if(this.tip){var v=Object.assign({},value);v.state="open",this._data=[v]}else this._data=value},enumerable:!0,configurable:!0}),Object.defineProperty(SideMenuItemsComponent.prototype,"border",{get:function(){return!!this.tip||this.sidemenu.border},enumerable:!0,configurable:!0}),Object.defineProperty(SideMenuItemsComponent.prototype,"multiple",{get:function(){return!this.tip&&this.sidemenu.multiple},enumerable:!0,configurable:!0}),SideMenuItemsComponent.prototype.onPanelSelect=function(panel){var index=this.accordion.getPanelIndex(panel);index>=0&&(this.data[index].state="open")},SideMenuItemsComponent.prototype.onPanelUnselect=function(panel){var index=this.accordion.getPanelIndex(panel);index>=0&&(this.data[index].state="closed")},__decorate([ViewChild("accordion"),__metadata("design:type",AccordionComponent)],SideMenuItemsComponent.prototype,"accordion",void 0),__decorate([Input(),__metadata("design:type",Object)],SideMenuItemsComponent.prototype,"tip",void 0),__decorate([Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],SideMenuItemsComponent.prototype,"data",null),SideMenuItemsComponent=__decorate([Component({selector:"eui-sidemenu-items",template:'\n        <eui-accordion #accordion class="sidemenu f-full" \n                [border]="border"\n                [animate]="sidemenu.animate" \n                [multiple]="multiple"\n                (panelSelect)="onPanelSelect($event)"\n                (panelUnselect)="onPanelUnselect($event)">\n            <eui-accordion-panel *ngFor="let menu of data" \n                    [title]="menu.text"\n                    [iconCls]="tip?null:menu.iconCls"\n                    [selected]="menu.state==\'open\'">\n                <eui-tree \n                        [data]="menu.children" \n                        [selection]="sidemenu.selection" \n                        [animate]="sidemenu.animate"\n                        [selectLeafOnly]="true"\n                        (selectionChange)="sidemenu.onSelectionChange($event)"\n                        (nodeClick)="sidemenu.onNodeClick($event)"\n                        >\n                </eui-tree>\n            </eui-accordion-panel>\n        </eui-accordion>\n    ',host:{class:"f-column"}}),__param(0,Host()),__param(0,Inject(forwardRef(function(){return SideMenuComponent}))),__metadata("design:paramtypes",[SideMenuComponent])],SideMenuItemsComponent)}();export{SideMenuItemsComponent};