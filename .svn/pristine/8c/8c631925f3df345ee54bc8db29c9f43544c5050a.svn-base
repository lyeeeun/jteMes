package jin.mes.form.basMgt.codMgt.pageSet;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import jin.mes.common.cache.CacheService;
import kr.co.itcall.jte.common.util.JteUtils;
import kr.co.itcall.jte.spring.config.exception.BusinessException;

@Service
public class PageSetService {
	
	@Resource
	PageSetMapper pageSetMapper;
	
	@Autowired
	CacheService cacheService;
	
	//페이지 세팅 - 그리드 정보 조회
	public List<PageSetDto> getPageSetList(PageSetDto pageSetDto){
		List<PageSetDto> pageSetList = new ArrayList<PageSetDto>();
		try { 
			pageSetList = pageSetMapper.selectPageSetList(pageSetDto);
		}catch(Exception ex) {
			throw new BusinessException("페이지 세팅 - 그리드 정보 조회 에러 : " + ex.getMessage());
		}
		return pageSetList;
	}
	
	
	//페이지 세팅 - 그리드 정보 등록/수정
	@Transactional
	public String setPageSetSave(PageSetDto pageSetDto){
		String returnKey = "";
		try {
			pageSetDto.setCreatorId(JteUtils.getUserId());
			pageSetDto.setUpdatorId(JteUtils.getUserId());
			
			if(pageSetDto.getAction().equals("C")) {//
				
				//
				pageSetMapper.insertPageSetSave(pageSetDto);
				
				returnKey = pageSetDto.getGridNo();
			}else if(pageSetDto.getAction().equals("U")){//
				//
				pageSetMapper.updatePageSetSave(pageSetDto);
				
				returnKey = pageSetDto.getGridNo();
			}
		} catch (Exception e) {
			returnKey = "";
			throw new BusinessException("페이지 세팅 - 그리드 정보 등록/수정 에러: " + e.getMessage());
		}
		return returnKey;
	}
	
	//페이지 세팅 - 그리드 정보 삭제
	@Transactional
	public String setPageSetDelete(PageSetDto pageSetDto){
		String returnKey = "success";
		try {
			pageSetMapper.deletePageSet(pageSetDto);
		} catch (Exception e) {
			returnKey = "error";
			throw new BusinessException("페이지 세팅 - 그리드 정보 삭제 에러: " + e.getMessage());
		}
		return returnKey;
	}
		
	//페이지 세팅 - 필드 정보 조회
	public List<PageSetDto> getPageFieldList(PageSetDto pageSetDto){
		
		List<PageSetDto> pageSetList = new ArrayList<PageSetDto>();
		try {
			pageSetList = pageSetMapper.selectPageFieldList(pageSetDto);
		}catch(Exception ex) {
			throw new BusinessException("페이지 세팅 - 필드 정보 조회 에러 : " + ex.getMessage());
		}
		return pageSetList;
	}
	//페이지 세팅 - 필드 정보 등록/수정
	@Transactional
	public String setPageFieldSave(PageSetDto pageSetDto){
		String returnKey = "";
		try {
			pageSetDto.setCreatorId(JteUtils.getUserId());
			pageSetDto.setUpdatorId(JteUtils.getUserId());
			
			if(pageSetDto.getAction().equals("C")) {//
				
				//
				pageSetMapper.insertPageField(pageSetDto);
				
				returnKey = pageSetDto.getGridNo();
			}else if(pageSetDto.getAction().equals("U")){//
				//
				pageSetMapper.updatePageField(pageSetDto);
				
				returnKey = pageSetDto.getGridNo();
			}
		} catch (Exception e) {
			returnKey = "";
			throw new BusinessException("페이지 세팅 - 필드 정보 등록/수정 에러 : " + e.getMessage());
		}
		return returnKey;
	}
	
	//페이지 세팅 - 필드 정보 삭제
	@Transactional
	public String setPageFieldDelete(PageSetDto pageSetDto){
		String returnKey = "success";
		try {
			pageSetMapper.deletePageField(pageSetDto);
		} catch (Exception e) {
			returnKey = "error";
			throw new BusinessException("페이지 세팅 - 필드 정보 삭제 에러: " + e.getMessage());
		}
		return returnKey;
	}
}
