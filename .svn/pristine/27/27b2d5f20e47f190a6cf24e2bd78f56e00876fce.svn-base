/**
 * EasyUI for Angular 1.2.5
 * 
 * Copyright (c) 2009-2019 www.jeasyui.com. All rights reserved.
 *
 * Licensed under the freeware license: https://www.jeasyui.com/license_freeware2.php
 * To use it on other terms please contact us: info@jeasyui.com
 *
 */
var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{Component,Host,Inject,forwardRef,Input,ContentChild,ContentChildren,QueryList,ElementRef,ChangeDetectorRef}from"@angular/core";import{MenuComponent}from"./menu.component";import{SubMenuComponent}from"./submenu.component";import{ItemTemplateDirective}from"../base/template-base";var MenuItemComponent=function(){function MenuItemComponent(menu,hostRef,cdRef){this.menu=menu,this.hostRef=hostRef,this.cdRef=cdRef,this.value=null,this.text=null,this.iconCls=null,this.disabled=!1,this.subMenu=null,this.parentMenu=null,this.isActived=!1}return MenuItemComponent.prototype.ngAfterContentInit=function(){var _this=this;this.initMenu(),this.subMenus.changes.subscribe(function(){_this.initMenu()})},MenuItemComponent.prototype.initMenu=function(){this.subMenu=null,this.subMenus.length&&(this.subMenu=this.subMenus.first,this.subMenu.parentItem=this)},MenuItemComponent.prototype.onClickItem=function(event){event.stopPropagation(),this.disabled||(this.menu.itemClick.emit(this.value||this.text),this.subMenu||(this.menu.unhighlight(),this.menu.hide()))},MenuItemComponent.prototype.highlight=function(){this.parentMenu.subItems.forEach(function(item){item.unhighlight()}),this.isActived=!0,this.subMenu&&(this.cdRef.detectChanges(),this.subMenu.alignMenu())},MenuItemComponent.prototype.unhighlight=function(){this.subMenu&&this.subMenu.unhighlight(),this.isActived=!1},__decorate([ContentChild(ItemTemplateDirective),__metadata("design:type",ItemTemplateDirective)],MenuItemComponent.prototype,"itemTemplate",void 0),__decorate([ContentChildren(forwardRef(function(){return SubMenuComponent})),__metadata("design:type",QueryList)],MenuItemComponent.prototype,"subMenus",void 0),__decorate([Input(),__metadata("design:type",Object)],MenuItemComponent.prototype,"value",void 0),__decorate([Input(),__metadata("design:type",String)],MenuItemComponent.prototype,"text",void 0),__decorate([Input(),__metadata("design:type",String)],MenuItemComponent.prototype,"iconCls",void 0),__decorate([Input(),__metadata("design:type",Boolean)],MenuItemComponent.prototype,"disabled",void 0),MenuItemComponent=__decorate([Component({selector:"eui-menu-item",template:'\n\t\t<div class="menu-item" \n\t\t\t\t[class.menu-active]="isActived"\n\t\t\t\t[class.menu-item-disabled]="disabled"\n\t\t\t\t[class.menu-active-disabled]="disabled && isActived"\n\t\t\t\t(mouseenter)="highlight()"\n\t\t\t\t(mouseleave)="unhighlight()"\n\t\t\t\t(click)="onClickItem($event)">\n\t\t\t<div *ngIf="!itemTemplate" class="menu-text">{{text}}</div>\n\t\t\t<ng-template *ngIf="itemTemplate" [euiMenuItemTemplate]="itemTemplate.template" [value]="value" [text]="text"></ng-template>\n\t\t\t<div *ngIf="iconCls" class="menu-icon {{iconCls}}"></div>\n\t\t\t<div *ngIf="subMenu" class="menu-rightarrow"></div>\n\t\t\t<ng-content *ngIf="isActived && !disabled" select="eui-submenu"></ng-content>\n\t\t</div>\n\t',host:{class:"f-column f-noshrink"}}),__param(0,Host()),__param(0,Inject(forwardRef(function(){return MenuComponent}))),__metadata("design:paramtypes",[MenuComponent,ElementRef,ChangeDetectorRef])],MenuItemComponent)}();export{MenuItemComponent};