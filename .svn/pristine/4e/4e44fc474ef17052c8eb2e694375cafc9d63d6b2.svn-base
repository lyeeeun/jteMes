<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>
<!-- 마스터 그리드 영역 -->
<div id="grid-content" class="baseCodeMgtForm" style="width: 100%;">
	<div id="jteSingleGrid" class="jteGrid baseCodeMgtForm" style="width: 39.5%; height: 100%; float: left;"></div>
	<div id="jteSubGrid" class="jteGrid baseCodeMgtForm" style="width: 59.5%; height: 100%; float: right;"></div>
</div>

<div style="display: none;">
	<div id="jtePopForm">
		<form id="jtePopForm_form" class="baseCodeMgtForm">
			<table id="jtePopForm_master" class="BasicTable">
				<colgroup>
					<col style="width: 17%;">
					<col style="width: 33%;">
					<col style="width: 17%;">
					<col style="width: 33%;">
				</colgroup>
				<tr>
					<!-- 코드 -->
					<td>
						<i class="fas fa-caret-right"></i> <spring:message code="col_upCdId" text="상위코드"/> :
					</td>
					<td colspan="3">
						<input type="text" id="upCdId" name="upCdId" readonly/>
					</td>
				</tr>
				<tr>
					<!-- 코드 -->
					<td>
						<i class="fas fa-caret-right"></i> <spring:message code="col_cdId"/> :
					</td>
					<td colspan="3">
						<input type="text" id="cdId" name="cdId" />
					</td>
				</tr>
				<tr>
					<!-- 코드명 -->
					<td>
						<i class="fas fa-caret-right"></i> <spring:message code="col_cdNm"/> :
					</td>
					<td colspan="3">
						<input type="text" id="cdNm" class="btn-input" name="cdNm" format="text" />
						<button class="k-button k-primary jte-msgBox" type="button" prefix="bc" defId="cdId" defNm="cdNm">
							<spring:message code="pop_msgLang"/>
						</button>
						<input type="hidden" id="msg_cdId" />
					</td>
				</tr>
					<!-- 코드값 -->
					<td>
						<i class="fas fa-caret-right"></i> <spring:message code="col_cdVal"/> :
					</td>
					<td colspan="3">
						<input type="text" id="cdVal" name="cdVal" format="text" />
					</td>
				</tr>
				<tr>
					<!-- 순서 -->
					<td>
						<i class="fas fa-caret-right"></i> <spring:message code="col_sortNum"/>:
					</td>
					<td>
						<input id="sortNum" name="sortNum" format="currency" />
					</td>
					<!-- 사용유무 -->
					<td>
						<i class="fas fa-caret-right"></i> <spring:message code="col_cdUseYn"/> :
					</td>
					<td>
						<input id="useYn" name="useYn" format="selBox" keyGbn="cdVal" msg="comn_isUse" />
					</td>
				</tr>
				<tr>
					<td>
						<i class="fas fa-caret-right"></i> 예비1 :
					</td>
					<td>
						<input type="text" id="cdReserve01" name="cdReserve01" format="text" />
					</td>
					<td>
						<i class="fas fa-caret-right"></i> 예비2 :
					</td>
					<td>
						<input type="text" id="cdReserve02" name="cdReserve02" format="text" />
					</td>
				</tr>
				<tr>
					<td>
						<i class="fas fa-caret-right"></i> 예비3 :
					</td>
					<td>
						<input type="text" id="cdReserve03" name="cdReserve03" format="text" />
					</td>
					<td>
						<i class="fas fa-caret-right"></i> 예비4 :
					</td>
					<td>
						<input type="text" id="cdReserve04" name="cdReserve04" format="text" />
					</td>
				</tr>
				<tr>
					<!-- 설명 -->
					<td>
						<i class="fas fa-caret-right"></i> <spring:message code="col_desc" /> :
					</td>
					<td colspan="3">
						<input type="text" id="description" name="description" format="text" />
					</td>
				</tr>
				<tr style="display: hidden;">
					<td>
						<input type="hidden" id="updatorId" name="updatorId" />
						<input type="hidden" name="creatorId" id="creatorId"/> 
						<input type="hidden" name="action" id="cd_action"/>
					</td>
				</tr>
			</table>
		</form>
		<div class="final-btn-area baseCodeMgtForm-final-btn-area">
			<!-- 저장 -->
			<button class="k-button k-primary jte-create final-btn" type="button" style="display: none;">
				<spring:message code="pop_save"/>
			</button>
			<!-- 저장 -->
			<button class="k-button k-primary jte-update final-btn" type="button" style="display: none;">
				<spring:message code="pop_save"/>
			</button>
			<!-- 취소 -->
			<button class="k-button k-primary final-btn" type="button" onclick="gfn_closePop('jtePopForm');">
				<spring:message code="pop_cancel"/>
			</button>
		</div>
	</div>
</div>
<!-- 전주원 주임 작업 CSS -->
<link href='/resources/mes/css/contents/basMgt/codMgt/baseCodeMgt/baseCodeMgtForm_JJW.css' rel="stylesheet">

<script>
	var pageCache = {};
	
	var lfo_common = {};//Form 내부에서 사용될 Object
	
	var lfo_subGrd = {};//팝업 그리드에서 사용
	
	//진입 이벤트(공통코드에서 실행)
	this.lfn_init = function() {
		
		pageCache = gfn_getCurrentPage(); 
		
		this.lfn_jteSgGrd_setGrd();
	};

	this.lfn_jteSgGrd_setGrd = function() {
		lfo_common = {layoutId : "jteSingleGrid"};
		
		lfo_common = gfn_currentGrid_set(lfo_common, pageCache);

		//lfo_common.popId = "jtePopForm";

		//lfo_common.ctrlUrl = "/form/basMgt/codMgt/baseCodeMgt"

		lfo_common.crud = {
			read : {url : "/getCode", auth : "", prmt : {}, search : false, dynamicPrmt : { upCdId : "codeMaster"}},
			create : {url : "/addCode", auth : "", openFunc : lfn_jtePop_open, callback : lfn_jtePop_save},
			update : {url : "/setCode", auth : "", openFunc : "", callback : lfn_jtePop_save},
			destroy : {url : "/delCode", auth : "", callback : lfn_jteGrid_delete}
		};
		
 		lfo_common.customTitle = {html : '<input id ="codeMaster">', callback : lfn_codeMaster_set};
 	
		console.log(lfo_common);
 		
// 		lfo_common.model = {
// 			id : "cdId",
// 			fields : {
// 				cdId : {type : "string"},
// 				upCdId : {type : "string"},
// 				cdNm : {type : "string"},
// 				cdVal : {type : "string"},
// 				description : {type : "string"},
// 				cdReserve01 : {type : "string"},
// 				cdReserve02 : {type : "string"},
// 				cdReserve03 : {type : "string"},
// 				cdReserve04 : {type : "string"},
// 				updatorId : {type : "string"},
// 				updatedAt : {type : "string"},
// 				sortNum : {type : "int"},
// 				useYn : {type : "string"}
// 			}
// 		};

		lfo_common.columns = [ 
			{selectable : true, width : "50px"}, 
			{field : "cdViewId", title : gfn_getMsg("pop_view", "보기"), width : 170, attributes:{style:'text-align:center;'}, 
				template : '<button class="k-button k-primary" type="button" onclick = "lfn_jtePop_open(\'EDT\',this)"><spring:message code = "btn_update" /></button>'+ 
				'<button class="k-button k-primary" type="button" onclick = "lfn_subGrid_call(\'set\', this)"><spring:message code = "pop_view" /></button>'},
			{field : "cdId", title : gfn_getMsg("col_cdId", "코드"), width : "150px"},
			{field : "cdNm", title : gfn_getMsg("col_cdNm", "코드명"), width : "200px"},
			{field : "cdVal", title : gfn_getMsg("col_cdVal","코드값"), width : "150px"},
			{field : "description", title : gfn_getMsg("col_desc","설명"), width : "250px"},
			{field : "sortNum", title : gfn_getMsg("col_sortNum", "순서"), width : "80px"},
			{field : "cdReserve01", title : "예비1", width : "120px"},
			{field : "cdReserve02", title : "예비2", width : "120px"},
			{field : "cdReserve03", title : "예비3", width : "120px"},
			{field : "cdReserve04", title : "예비4", width : "120px"},
			{field : "useYn", title : gfn_getMsg("col_cdUseYn", "사용유무"), width : "105px"},
			{field : "updatorId", title : gfn_getMsg("col_updateId","수정자"), width : "100px"}
		];

		lfo_common.selectBox = {};

		lfo_common.validation = {
			cdId : {
				messages : "영문 또는 숫자만 입력가능하며, 5~20글자 사이로 입력해주세요.",
				rules : function(input) {
					if (input.is("[name=cdId]")) {
						return /^[A-Za-z0-9+]{5,20}$/.test(input.val());
					}
					return true;
				}
			},
			cdNm : {
				messages : "코드명을 입력하세요",
				rules : function(input) {
					if (input.is("[name=cdNm]")) {
						return input.val().length != 0 && input.val().trim().length != "";
					}
					return true;
				}
			},
			sortNum : {
				messages : "순서을 입력하세요",
				rules : function(input) {
					if (input.is("[name=sortNum]")) {
						return input.val().length != 0 && input.val().trim().length != "" && isNaN(input.val()) == false;
					}
					return true;
				}
			}
		}
		lfo_common.grid = gfn_grid_set(lfo_common);
	}
	
	//코드 구분 selectbox 세팅
	this.lfn_codeMaster_set = function(){
		var dropDownData = [];
		
		//기초코드 biz 하위단 불러옴
		$.each(gfn_getCode('biz'), function(index, item) {
			dropDownData.push({text : gfn_getMsg('bc_' + item.cdId, item.cdNm), value : item.cdId});
		});
		
		//select box 세팅
		$("#codeMaster").kendoDropDownList({
			dataTextField: "text",
			dataValueField: "value",
			dataSource: dropDownData,
			index: 0,
			change: lfn_codeMaster_change
		});
	}
	
	//코드구분 selectbox 변경 이벤트
	this.lfn_codeMaster_change = function(){
		//페이징 초기화
		lfo_common.grid.dataSource.query({ page: 1 });
		
		lfn_subGrid_call('clear');
	}
	
	//수정 버튼  콜백(팝업)
	this.lfn_jtePop_open = function(mode, selectedItem) {
		var options = {
			modal : true,
			width : "700px",
			height : "470px",
			id : lfo_common.popId,
			//title:gfn_getMsg("pop_addPop"),
			resizable : true,
			animation : {
				open : {effects : "expand:vertical fadeIn"},
				close : {effects : "expand:vertical fadeIn", reverse : true}
			},
			actions : [/*"Minimize", "Maximize", */"Close" ]
		};
		
		if (mode == "NEW") {
			options.title = gfn_getMsg("pop_basicCodeRegist"); //기초코드 등록
		} else if (mode == "EDT") {
			options.title = gfn_getMsg("pop_basicCodeUpdate"); //기초코드 조회
		}
		
		//팝업이 생성된 뒤 동작해야할 함수 입력
		options.callback = function() {
			lfn_jtePop_set(mode, selectedItem);
		};
		this.gfn_winOpen(options);
	}
	
	//팝업내용 세팅
	this.lfn_jtePop_set = function(mode, selectedItem) {
		var gridSelected = {};
		if (mode == 'NEW') {
			
			lfo_common.gridSelected = {};
			
			gfn_popform_set(lfo_common, mode);
			
			//상위 코드값 기입
			$("#"+lfo_common.popId+" [name=upCdId]").val($("#codeMaster").val());
			
			//서브그리드 초기화
			lfn_subGrid_call('clear');
			
		} else if (mode == 'EDT') {
			$("#cdId").attr("readonly", true);
			
			lfo_common.gridSelected = lfo_common.grid.dataItem($(selectedItem).closest("tr"));
			
			gfn_popform_set(lfo_common, mode, lfo_common.gridSelected);
			
			//서브그리드 활성화
			lfn_subGrid_call('set',lfo_common.gridSelected.cdId);
		}
	}
	
	//Form내용 입력/저장
	this.lfn_jtePop_save = function(mode) {

		//저장 하기전에 validationCheck
		var validation = $("#" + lfo_common.popId + "_form").getKendoValidator();
		if (gfn_isEmpty(validation) || validation.validate()) {

			var savePrmt = gfn_serializeObject(lfo_common.popId + "_form");
			savePrmt.updatorId = _loginUserUsername.value;

			var msgId = $("#" + lfo_common.popId + "_form").find(".jte-msgBox").attr("defId");
			var msgList = $("#msg_" + msgId).val();
			if (!gfn_isNull(msgList)) {
				savePrmt.msgList = JSON.parse(msgList);
			}
			$.ajax({
				async : false,
				url : lfo_common.ctrlUrl + lfo_common.crud[mode].url,
				type : "POST",
				data : JSON.stringify(savePrmt),
				traditional : true,
				contentType : 'application/json',
				dataType : 'json',
				success : function(data) {
					if (data != "") {
						
						lfo_common.grid.dataSource.read();
						
						//서브그리드 활성화
						lfn_subGrid_call('set',data.result);
						
						gfn_closePop(lfo_common.popId);
						
						gfn_msgBox({msg : gfn_getMsg("pop_successConfirm", "성공적으로 저장되었습니다.")}); //성공
					} else {
						gfn_warnBox({msg : gfn_getMsg("pop_failedConfirm", "실패하였습니다. \n 값이 제대로 입력되었는지 확인 후 다시 시도해주세요.")}); //실패
					}
				},
				error : function(ex) {
					gfn_loading(false);
					gfn_errBox({msg : gfn_getMsg("pop_errorFailed", "오류가 발생했습니다. \n 관리자에게 문의해주세요.")}); //오류가 발생했습니다.
				}
			});
		}
	}
	
	//삭제 콜백
	this.lfn_jteGrid_delete = function() {
		
		//서브그리드 숨김
		lfn_subGrid_call('clear');
		
		var delPrmt = [];
		$("#" + lfo_common.layoutId + " .k-checkbox").each(function(index, item) {
			if ($(this).attr("aria-checked") == "true") {
				delPrmt.push(lfo_common.grid.dataItem($(this).closest('tr')));
			}
		});
		
		$.ajax({
			async : false,
			url : lfo_common.ctrlUrl + lfo_common.crud.destroy.url,
			type : "POST",
			data : JSON.stringify(delPrmt),
			traditional : true,
			contentType : 'application/json',
			dataType : 'json',
			success : function(data) {
				lfo_common.grid.dataSource.read();
				gfn_msgBox({msg : gfn_getMsg("pop_deleteSuccess")}); //성공적으로 삭제되었습니다.
			},
			error : function(ex) {
				gfn_loading(false);
				gfn_errBox({msg : gfn_getMsg("pop_errorFailed", "오류가 발생했습니다. \n 관리자에게 문의해주세요.")}); //오류가 발생했습니다.
			}
		});
	}
	
	//서브그리드 세팅
	this.lfn_subGrid_call = function(mode, selectedItem) {
		//서브그리드 초기화
		lfo_common.gridSelected = {}
		$("#jteSubGrid").html("");
		
		//서브그리드가 초기화가 아닐 경우 세팅
		if(mode != 'clear'){
			if(typeof(selectedItem) == "string"){
				
				lfo_common.gridSelected.cdId = selectedItem;
				
			}else if(typeof(selectedItem) == "object"){
				lfo_common.gridSelected = lfo_common.grid.dataItem($(selectedItem).closest("tr"));	
			}
		
			lfn_subGrid_set();
// 			if(gfn_isEmpty(lfo_subGrd.grid)){
// 				lfn_subGrid_set();
// 			}else{
// 				lfo_subGrd.grid.dataSource.read();
// 			}
		}
	}
	
	//서브그리드 세팅
	this.lfn_subGrid_set = function() {
		lfo_subGrd = {};

		lfo_subGrd.layoutId = "jteSubGrid";

		//2.
		lfo_subGrd.popId = "jtePopForm";

		//3.
		lfo_subGrd.ctrlUrl = "/form/basMgt/codMgt/baseCodeMgt"

		//4
		lfo_subGrd.crud = {
			read : {url : "/getCode", auth : "", prmt : {upCdId : lfo_common.gridSelected.cdId}},
			create : {url : "/addCode", auth : "", openFunc : lfn_subPop_open, callback : lfn_subPop_save},
			update : {url : "/setCode", auth : "", openFunc : "", callback : lfn_subPop_save},
			destroy : {url : "/delCode", auth : "", callback : lfn_subGrid_delete}
		};
		
		lfo_subGrd.customTitle = {html:"<div style='padding : 5px 0; font-weight: bold; font-size: 20px;'>선택된 코드 : " + lfo_common.gridSelected.cdId + "</div>"};
		
		//5.
		lfo_subGrd.model = {
			id : "cdId",
			fields : {
				cdId : {type : "string"},
				upCdId : {type : "string"},
				cdNm : {type : "string"},
				cdVal : {type : "string"},
				cdReserve01 : {type : "string"},
				cdReserve02 : {type : "string"},
				cdReserve03 : {type : "string"},
				cdReserve04 : {type : "string"},
				description : {type : "string"},
				sortNum : {type : "int"},
				updatorId : {type : "string"},
				updatedAt : {type : "string"},
				useYn : {type : "string"},
				updatedAt : {type : "string"}
			}
		};

		lfo_subGrd.columns = [ 
			{selectable : true, width : "50px"},
			{field : "cdUpdateId", title : gfn_getMsg("btn_update"), width : "90px", attributes:{style:'text-align:center;'},
				template : '<button class="k-button k-primary" type="button" onclick = "lfn_subPop_open(\'EDT\',this)" style="min-width:60px;">' + "<spring:message code = "btn_update" />" + '</button>'}, 
			{field : "cdId", title : gfn_getMsg("col_cdId", "코드"), width : "150px"},
			{field : "cdNm", title : gfn_getMsg("col_cdNm", "코드명"), width : "300px"},
			{field : "cdVal", title : gfn_getMsg("col_cdVal", "코드값"), width : "150px"},
			{field : "sortNum", title : gfn_getMsg("col_sortNum", "순서"), width : "80px"},
			{field : "description", title : gfn_getMsg("col_desc", "설명"), width : "250px"},
			{field : "cdReserve01", title : "예비1", width : "120px"}, 
			{field : "cdReserve02", title : "예비2", width : "120px"}, 
			{field : "cdReserve03", title : "예비3", width : "120px"}, 
			{field : "cdReserve04", title : "예비4", width : "120px"}, 
			{field : "useYn", title : gfn_getMsg("col_cdUseYn", "사용유무"), width : "105px"}, 
			{field : "updatorId",title : gfn_getMsg("col_updateId"),width : "100px"} //수정자
		];

		lfo_subGrd.selectBox = [ 
			{ text: gfn_getMsg("col_cdId", "코드"), value: "cd_id" },
			{ text: gfn_getMsg("col_cdNd", "코드명"), value: "cd_nm" },
			{ text: gfn_getMsg("col_cdVal", "코드값"), value: "cd_val" }
		];
		
		lfo_subGrd.validation = {
			cdId : {
				messages : "영문 또는 숫자만 입력가능하며, 5~20글자 사이로 입력해주세요.",
				rules : function(input) {
					if (input.is("[name=cdId]")) {
						return /^[A-Za-z0-9+]{5,20}$/.test(input.val());
					}
					return true;
				}
			},
			cdNm : {
				messages : "코드명을 입력하세요",
				rules : function(input) {
					if (input.is("[name=cdNm]")) {
						return input.val().length != 0 && input.val().trim().length != "";
					}
					return true;
				}
			},
			sortNum : {
				messages : "순서을 입력하세요",
				rules : function(input) {
					if (input.is("[name=sortNum]")) {
						return input.val().length != 0 && input.val().trim().length != "" && isNaN(input.val()) == false;
					}
					return true;
				}
			}
		}
		lfo_subGrd.grid = gfn_grid_set(lfo_subGrd);
	}
	
	//수정 버튼  콜백(팝업)
	this.lfn_subPop_open = function(mode, selectedItem) {
		var options = {
			modal : true,
			width : "700px",
			height : "470px",
			id : lfo_subGrd.popId,
			//title:gfn_getMsg("pop_addPop"),
			resizable : true,
			animation : {
				open : {effects : "expand:vertical fadeIn"},
				close : {effects : "expand:vertical fadeIn", reverse : true}
			},
			actions : [/*"Minimize", "Maximize", */"Close" ]
		};
		
		if (mode == "NEW") {
			options.title = gfn_getMsg("pop_basicCodeRegist"); //기초코드 등록
		} else if (mode == "BASE_EDT" || mode == "SUB_EDT") {
			options.title = gfn_getMsg("pop_basicCodeUpdate"); //기초코드 조회
		}
		
		//팝업이 생성된 뒤 동작해야할 함수 입력
		options.callback = function() {
			lfn_subPop_set(mode, selectedItem);
		};
		
		this.gfn_winOpen(options);
	}
	
	//팝업내용 세팅
	this.lfn_subPop_set = function(mode, selectedItem) {
		var gridSelected = {};
		if (mode == 'NEW') {
			lfo_subGrd.gridSelected = "";
			gfn_popform_set(lfo_subGrd, mode);
			
			//상위 코드값 기입
			$("#"+lfo_subGrd.popId+" [name=upCdId]").val(lfo_common.gridSelected.cdId);
		}else if (mode == 'EDT') {
			$("#cdId").attr("readonly", true);
			lfo_subGrd.gridSelected = lfo_subGrd.grid.dataItem($(selectedItem).closest("tr"));
			gfn_popform_set(lfo_subGrd, mode, lfo_subGrd.gridSelected);
		}
	}
	
	//Form내용 입력/저장
	this.lfn_subPop_save = function(mode) {
		//저장 하기전에 validationCheck
		var validation = $("#" + lfo_subGrd.popId + "_form").getKendoValidator();
		if (gfn_isEmpty(validation) || validation.validate()) {

			var savePrmt = gfn_serializeObject(lfo_subGrd.popId + "_form");
			savePrmt.updatorId = _loginUserUsername.value;

			var msgId = $("#" + lfo_subGrd.popId + "_form").find(".jte-msgBox").attr("defId");
			
			var msgList = $("#msg_" + msgId).val();
			if (!gfn_isNull(msgList)) {
				savePrmt.msgList = JSON.parse(msgList);
			}
			
			$.ajax({
				async : false,
				url : lfo_subGrd.ctrlUrl + lfo_subGrd.crud[mode].url,
				type : "POST",
				data : JSON.stringify(savePrmt),
				traditional : true,
				contentType : 'application/json',
				dataType : 'json',
				success : function(data) {
					if (data != "") {
						lfo_common.grid.dataSource.read();
						lfo_subGrd.grid.dataSource.read();
						gfn_closePop(lfo_subGrd.popId);
						gfn_msgBox({msg : gfn_getMsg("pop_successConfirm", "성공적으로 저장되었습니다.")}); //성공
					} else {
						gfn_warnBox({msg : gfn_getMsg("pop_failedConfirm", "실패하였습니다. \n 값이 제대로 입력되었는지 확인 후 다시 시도해주세요.")}); //실패
					}
				},
				error : function(ex) {
					gfn_loading(false);
					gfn_errBox({msg : gfn_getMsg("pop_errorFailed", "오류가 발생했습니다. \n 관리자에게 문의해주세요.")}); //오류가 발생했습니다.
				}
			});
		}
	}
	
	//삭제 콜백
	this.lfn_subGrid_delete = function() {
		var delPrmt = [];
		$("#" + lfo_subGrd.layoutId + " .k-checkbox").each(function(index, item) {
			if ($(this).attr("aria-checked") == "true") {
				delPrmt.push(lfo_subGrd.grid.dataItem($(this).closest('tr')));
			}
		});
		$.ajax({
			async : false,
			url : lfo_subGrd.ctrlUrl + lfo_subGrd.crud.destroy.url,
			type : "POST",
			data : JSON.stringify(delPrmt),
			traditional : true,
			contentType : 'application/json',
			dataType : 'json',
			success : function(data) {
				lfo_subGrd.grid.dataSource.read();
				gfn_msgBox({msg : gfn_getMsg("pop_deleteSuccess")}); //성공적으로 삭제되었습니다.
			},
			error : function(ex) {
				gfn_loading(false);
				gfn_errBox({msg : gfn_getMsg("pop_errorFailed", "오류가 발생했습니다. \n 관리자에게 문의해주세요.")}); //오류가 발생했습니다.
			}
		});
	}
</script>