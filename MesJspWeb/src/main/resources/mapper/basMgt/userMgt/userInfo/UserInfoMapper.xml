<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jin.mes.mapper.basMgt.userMgt.userInfo.UserInfoMapper">
	
	<!-- 유저 조회 -->
	<sql id = "userInfoSql">
			ur.user_id		AS userId,
			ur.user_nm		AS userNm,
			ur.is_lock		AS isLock, 
			ur.lang_cd		AS langCd,
			ur.description	AS description, 
			dept.dept_id	AS deptId,
			dept.dept_nm	AS deptNm,
			pos.position_id	AS positionId,
			pos.position_nm	AS positionNm
		FROM mb_user_info ur
		LEFT OUTER JOIN mb_position_info pos ON ur.position_id = pos.position_id AND pos.is_use = TRUE
		LEFT OUTER JOIN mb_dept_info dept ON ur.dept_id = dept.dept_id AND dept.is_use = TRUE
		WHERE ur.is_del = FALSE
		<if test="searchText != null and searchText != '' ">
			AND ${searchGubun} LIKE CONCAT('%',#{searchText},'%')
		</if>
		<if test="userId != null and userId != '' ">
			AND ur.user_id = #{userId}
		</if>
		<if test="isLock != null and isLock != '' ">
			AND ur.is_lock = #{lock}
		</if>
	</sql>
	
	<!-- 유저 조회 List -->
	<select id="selectUserList"
		parameterType="jin.mes.form.basMgt.userMgt.userInfo.UserInfoDto"
		resultType="jin.mes.form.basMgt.userMgt.userInfo.UserInfoDto">
		SELECT * FROM (
				SELECT 
					<choose>
						<when test="sort != null and sort != '' ">
							ROW_NUMBER() OVER(ORDER BY ${sort}) AS RNUM,
						</when>
						<otherwise>
							ROW_NUMBER() OVER() AS RNUM,
						</otherwise>
					</choose>
					<include refid="userInfoSql" />
				)s_table
				WHERE RNUM <![CDATA[ >= ]]> #{firstIndex} AND RNUM <![CDATA[ <= ]]> #{lastIndex}
	</select>
	
	<!-- 유저조회 Count-->
	<select id="selectUserListCount"
	parameterType="jin.mes.form.basMgt.userMgt.userInfo.UserInfoDto"
		resultType="java.lang.Integer">
			SELECT count(*) 
				FROM (
					SELECT
					<include refid="userInfoSql" />
				)c_table
	</select>
	
	<!-- 사용자 권한 조회 -->
	<select id="selectUserRoleList"
	parameterType="jin.mes.form.basMgt.userMgt.userAuth.UserAuthDto"
		resultType="jin.mes.form.basMgt.userMgt.userAuth.UserAuthDto">
			SELECT 
				rol.role_id			AS roleId,
				rol.role_nm			AS roleNm,	
				rol.description		AS description,
				rol.created_at		AS createdAt,
				rol.updated_at 		AS updatedAt,
				rol.creator_id 		AS creatorId,
				rol.updator_id 		AS updatorId
				<if test="userId != null and userId != '' ">
				, rtl.user_id		AS userId
				</if>
			FROM mb_role_info rol
			<if test="userId != null and userId != '' ">
			LEFT OUTER JOIN mb_rtl_user_role rtl ON rtl.role_id = rol.role_id
				AND rtl.user_id = #{userId}
			</if>
	</select>
	
	<insert id="insertUserInfo" parameterType="jin.mes.form.basMgt.userMgt.userInfo.UserInfoDto">
		INSERT INTO mb_user_info(
			user_id, 
			password,	
			user_nm, 
			lang_cd, 	
			fail_cnt, 
			is_del, 
			is_lock, 	
			description, 
			creator_id,
			created_at, 
			updator_id,
			updated_at, 
			dept_id, 
			position_id
		)VALUES(
			#{userId},
			#{password},
			#{userNm},
			#{langCd},
			0,
			FALSE,
			FALSE,
			#{description},
			#{creatorId},
			NOW(),
			#{updatorId},		
			NOW(),
			#{deptId},
			#{positionId}
		)
	</insert>
	
	<update id="updateUserInfo" parameterType="jin.mes.form.basMgt.userMgt.userInfo.UserInfoDto">
		UPDATE mb_user_info
		SET updator_id = #{updatorId}, 
			updated_at = now()
			<if test="password != null and password != '' ">
				,password = #{password}
			</if>
			<if test="userNm != null">
				,user_nm = #{userNm}
			</if>
			<if test="langCd != null">
				,lang_cd = #{langCd}
			</if>
			<if test="failCnt != null">
				,fail_cnt = #{failCnt}
			</if>
			<if test="isDel != null">
				,is_del = #{isDel}
			</if>
			<if test="isLock != null">
				,is_lock = #{isLock}
			</if>
			<if test="description != null">
				,description = #{description}
			</if>
			<if test="deptId != null">
				,dept_id = #{deptId}
			</if>
			<if test="positionId != null">
				,position_id = #{positionId}
			</if>
			
		WHERE user_id = #{userId}
	</update>
	
	<insert id="insertUserRole" parameterType="jin.mes.form.basMgt.userMgt.userInfo.UserInfoDto">
		INSERT INTO mb_rtl_user_role(
			user_id, 
			role_id
		)
		<foreach collection="role" item="roleUnit" separator="UNION ALL ">
			SELECT #{userId} AS user_id, #{roleUnit} AS role_id FROM DUAL
		</foreach>
	</insert>
	
	<delete id="deleteUserRole" parameterType="jin.mes.form.basMgt.userMgt.userInfo.UserInfoDto">
		DELETE FROM mb_rtl_user_role
		WHERE user_id = #{userId}
	</delete>
	
</mapper>